{"version":3,"file":"static/js/3269.988cbbdf.chunk.js","mappings":"qiBAOc,SAAUA,EAAkBC,GACtC,IAAQC,EAA+ED,EAA/EC,UAAWC,EAAoEF,EAApEE,KAAnB,EAAuFF,EAA9DG,6BAAAA,OAAzB,SAA8DC,EAAyBJ,EAAzBI,SAAaC,EAAOC,EAAKN,EAAjF,gEAEEO,EAAgBL,EAAhBK,IAAKC,EAAWN,EAAXM,OAELC,EAA8BR,EAA9BQ,IAAKC,EAAyBT,EAAzBS,qBAEb,GAAgDC,EAAAA,EAAAA,WAAS,GAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KAEA,OACIC,EAAAA,cAACV,EAAQW,OAAAA,OAAAA,CAAAA,EAAAA,OAAAA,OAAAA,CACCd,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCE,GAAO,CAC/DW,WAAYT,EAAI,qBAChBU,SACIH,EAAAA,cAAAA,OAAAA,CAAMI,GAAG,yBAAyBC,WAAWC,EAAAA,EAAAA,GAAKf,EAAQgB,aAAcC,OAAQb,EAAIc,YAAaC,OAAO,QACpGV,EAAAA,cAACW,EAAAA,EAAqBV,OAAAA,OAAAA,CAACd,UAAWA,EAAWyB,+BAAgCb,EAAqBX,KAAMA,GAAUG,IAElHS,EAAAA,cAAAA,MAAAA,CAAKK,WAAWC,EAAAA,EAAAA,GAAKf,EAAQsB,mBACzBb,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKf,EAAQuB,qBAC9Cd,EAAAA,cAAAA,MAAAA,CAAKK,WAAWC,EAAAA,EAAAA,GAAKf,EAAQwB,8BAGjCf,EAAAA,cAAAA,MAAAA,CAAKI,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKf,EAAQyB,qBAC7CpB,EACGI,EAAAA,cAAAA,EAAAA,SAAAA,KACIA,EAAAA,cAAAA,QAAAA,CACIK,WAAWC,EAAAA,EAAAA,GAAKf,EAAQ0B,cAAe1B,EAAQ2B,qBAAsB3B,EAAQ4B,oBAC7EC,KAAK,SACLC,MAAO3B,EAAO,cAElBM,EAAAA,cAAAA,SAAAA,CACIK,WAAWC,EAAAA,EAAAA,GAAKf,EAAQ0B,cAAe1B,EAAQ+B,qBAAsB/B,EAAQ4B,oBAC7EC,KAAK,SACLG,KAAK,aACLF,MAAM,OACNG,gBAAc,GAEb/B,EAAI,cAIbO,EAAAA,cAAAA,QAAAA,CACIK,WAAWC,EAAAA,EAAAA,GACPf,EAAQ0B,cACR1B,EAAQ2B,qBACR3B,EAAQkC,mBACRlC,EAAQ4B,oBAEZC,KAAK,SACLM,aAAchC,EAAO,YACrBiC,UAAW7B,SAS9C,C","sources":["../node_modules/keycloakify/src/lib/pages/UpdateUserProfile.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { clsx } from \"../tools/clsx\";\nimport { UserProfileFormFields } from \"./shared/UserProfileCommons\";\nimport type { PageProps } from \"../KcProps\";\nimport type { KcContextBase } from \"../getKcContext\";\nimport type { I18nBase } from \"../i18n\";\n\nexport default function UpdateUserProfile(props: PageProps<Extract<KcContextBase, { pageId: \"update-user-profile.ftl\" }>, I18nBase>) {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template, ...kcProps } = props;\n\n    const { msg, msgStr } = i18n;\n\n    const { url, isAppInitiatedAction } = kcContext;\n\n    const [isFomSubmittable, setIsFomSubmittable] = useState(false);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            headerNode={msg(\"loginProfileTitle\")}\n            formNode={\n                <form id=\"kc-update-profile-form\" className={clsx(kcProps.kcFormClass)} action={url.loginAction} method=\"post\">\n                    <UserProfileFormFields kcContext={kcContext} onIsFormSubmittableValueChange={setIsFomSubmittable} i18n={i18n} {...kcProps} />\n\n                    <div className={clsx(kcProps.kcFormGroupClass)}>\n                        <div id=\"kc-form-options\" className={clsx(kcProps.kcFormOptionsClass)}>\n                            <div className={clsx(kcProps.kcFormOptionsWrapperClass)}></div>\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={clsx(kcProps.kcFormButtonsClass)}>\n                            {isAppInitiatedAction ? (\n                                <>\n                                    <input\n                                        className={clsx(kcProps.kcButtonClass, kcProps.kcButtonPrimaryClass, kcProps.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        value={msgStr(\"doSubmit\")}\n                                    />\n                                    <button\n                                        className={clsx(kcProps.kcButtonClass, kcProps.kcButtonDefaultClass, kcProps.kcButtonLargeClass)}\n                                        type=\"submit\"\n                                        name=\"cancel-aia\"\n                                        value=\"true\"\n                                        formNoValidate\n                                    >\n                                        {msg(\"doCancel\")}\n                                    </button>\n                                </>\n                            ) : (\n                                <input\n                                    className={clsx(\n                                        kcProps.kcButtonClass,\n                                        kcProps.kcButtonPrimaryClass,\n                                        kcProps.kcButtonBlockClass,\n                                        kcProps.kcButtonLargeClass\n                                    )}\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                    disabled={!isFomSubmittable}\n                                />\n                            )}\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n}\n"],"names":["UpdateUserProfile","props","kcContext","i18n","doFetchDefaultThemeResources","Template","kcProps","__rest","msg","msgStr","url","isAppInitiatedAction","useState","isFomSubmittable","setIsFomSubmittable","React","Object","headerNode","formNode","id","className","clsx","kcFormClass","action","loginAction","method","UserProfileFormFields","onIsFormSubmittableValueChange","kcFormGroupClass","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","type","value","kcButtonDefaultClass","name","formNoValidate","kcButtonBlockClass","defaultValue","disabled"],"sourceRoot":""}