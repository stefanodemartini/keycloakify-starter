{"version":3,"file":"static/js/3187.0c333cf5.chunk.js","mappings":"qiBAOc,SAAUA,EAAoBC,GACxC,IAAQC,EAA+ED,EAA/EC,UAAWC,EAAoEF,EAApEE,KAAnB,EAAuFF,EAA9DG,6BAAAA,OAAzB,SAA8DC,EAAyBJ,EAAzBI,SAAaC,EAAOC,EAAKN,EAAjF,gEAEEO,EAA+DN,EAA/DM,IAAKC,EAA0DP,EAA1DO,iBAAkBC,EAAwCR,EAAxCQ,kBAAmBC,EAAqBT,EAArBS,iBAE1CC,EAAgBT,EAAhBS,IAAKC,EAAWV,EAAXU,OAEb,GAAgDC,EAAAA,EAAAA,WAAS,GAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KAEA,OACIC,EAAAA,cAACZ,EAAQa,OAAAA,OAAAA,CAAAA,EAAAA,OAAAA,OAAAA,CACChB,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCE,GAAO,CAC/Da,eAAgBV,EAAiBW,OAAO,UACxCC,uBAAuB,EACvBC,WAAYV,EAAI,iBAChBW,SACIN,EAAAA,cAAAA,OAAAA,CAAMO,GAAG,mBAAmBC,WAAWC,EAAAA,EAAAA,GAAKpB,EAAQqB,aAAcC,OAAQpB,EAAIqB,mBAAoBC,OAAO,QACrGb,EAAAA,cAACc,EAAAA,EAAqBb,OAAAA,OAAAA,CAAChB,UAAWA,EAAW8B,+BAAgChB,EAAqBb,KAAMA,GAAUG,IACjHI,GACGO,EAAAA,cAAAA,MAAAA,CAAKQ,UAAU,cACXR,EAAAA,cAAAA,MAAAA,CAAKQ,WAAWC,EAAAA,EAAAA,GAAKpB,EAAQ2B,sBACzBhB,EAAAA,cAAAA,MAAAA,CAAKQ,UAAU,cAAa,YAAW,UAAS,eAAed,MAI3EM,EAAAA,cAAAA,MAAAA,CAAKQ,WAAWC,EAAAA,EAAAA,GAAKpB,EAAQ4B,kBAAmBC,MAAO,CAAE,aAAgB,KACrElB,EAAAA,cAAAA,MAAAA,CAAKO,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKpB,EAAQ8B,qBAC9CnB,EAAAA,cAAAA,MAAAA,CAAKQ,WAAWC,EAAAA,EAAAA,GAAKpB,EAAQ+B,4BACzBpB,EAAAA,cAAAA,OAAAA,KACIA,EAAAA,cAAAA,IAAAA,CAAGqB,KAAM9B,EAAI+B,UAAW3B,EAAI,mBAKxCK,EAAAA,cAAAA,MAAAA,CAAKO,GAAG,kBAAkBC,WAAWC,EAAAA,EAAAA,GAAKpB,EAAQkC,qBAC9CvB,EAAAA,cAAAA,QAAAA,CACIQ,WAAWC,EAAAA,EAAAA,GACPpB,EAAQmC,cACRnC,EAAQoC,qBACRpC,EAAQqC,mBACRrC,EAAQsC,oBAEZC,KAAK,SACLC,MAAOjC,EAAO,cACdkC,UAAWhC,SAQ1C,C","sources":["../node_modules/keycloakify/src/lib/pages/RegisterUserProfile.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { clsx } from \"../tools/clsx\";\nimport { UserProfileFormFields } from \"./shared/UserProfileCommons\";\nimport type { PageProps } from \"../KcProps\";\nimport type { KcContextBase } from \"../getKcContext\";\nimport type { I18nBase } from \"../i18n\";\n\nexport default function RegisterUserProfile(props: PageProps<Extract<KcContextBase, { pageId: \"register-user-profile.ftl\" }>, I18nBase>) {\n    const { kcContext, i18n, doFetchDefaultThemeResources = true, Template, ...kcProps } = props;\n\n    const { url, messagesPerField, recaptchaRequired, recaptchaSiteKey } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [isFomSubmittable, setIsFomSubmittable] = useState(false);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doFetchDefaultThemeResources, ...kcProps }}\n            displayMessage={messagesPerField.exists(\"global\")}\n            displayRequiredFields={true}\n            headerNode={msg(\"registerTitle\")}\n            formNode={\n                <form id=\"kc-register-form\" className={clsx(kcProps.kcFormClass)} action={url.registrationAction} method=\"post\">\n                    <UserProfileFormFields kcContext={kcContext} onIsFormSubmittableValueChange={setIsFomSubmittable} i18n={i18n} {...kcProps} />\n                    {recaptchaRequired && (\n                        <div className=\"form-group\">\n                            <div className={clsx(kcProps.kcInputWrapperClass)}>\n                                <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey} />\n                            </div>\n                        </div>\n                    )}\n                    <div className={clsx(kcProps.kcFormGroupClass)} style={{ \"marginBottom\": 30 }}>\n                        <div id=\"kc-form-options\" className={clsx(kcProps.kcFormOptionsClass)}>\n                            <div className={clsx(kcProps.kcFormOptionsWrapperClass)}>\n                                <span>\n                                    <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                                </span>\n                            </div>\n                        </div>\n\n                        <div id=\"kc-form-buttons\" className={clsx(kcProps.kcFormButtonsClass)}>\n                            <input\n                                className={clsx(\n                                    kcProps.kcButtonClass,\n                                    kcProps.kcButtonPrimaryClass,\n                                    kcProps.kcButtonBlockClass,\n                                    kcProps.kcButtonLargeClass\n                                )}\n                                type=\"submit\"\n                                value={msgStr(\"doRegister\")}\n                                disabled={!isFomSubmittable}\n                            />\n                        </div>\n                    </div>\n                </form>\n            }\n        />\n    );\n}\n"],"names":["RegisterUserProfile","props","kcContext","i18n","doFetchDefaultThemeResources","Template","kcProps","__rest","url","messagesPerField","recaptchaRequired","recaptchaSiteKey","msg","msgStr","useState","isFomSubmittable","setIsFomSubmittable","React","Object","displayMessage","exists","displayRequiredFields","headerNode","formNode","id","className","clsx","kcFormClass","action","registrationAction","method","UserProfileFormFields","onIsFormSubmittableValueChange","kcInputWrapperClass","kcFormGroupClass","style","kcFormOptionsClass","kcFormOptionsWrapperClass","href","loginUrl","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass","type","value","disabled"],"sourceRoot":""}